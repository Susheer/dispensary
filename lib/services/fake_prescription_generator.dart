import 'dart:math';
import 'package:flutter/material.dart';
import 'package:dispensary/models/medicine_model.dart';
import 'package:dispensary/models/prescription_line_model.dart';
import 'package:dispensary/models/prescription_model.dart';

class FakePrescriptionGenerator {
  static List<String> chiefComplaints = [
    'Pain: Describing discomfort in various body parts.',
    'Cough: Noting persistent or severe coughing.',
    'Fatigue: Reporting unusual or persistent tiredness.',
    'Shortness of Breath: Expressing difficulty breathing or breathlessness.',
    'Fever: Noting an elevated body temperature.',
    'Digestive Issues: Describing problems such as abdominal discomfort, bloating, nausea, or diarrhea.',
    'Dizziness or Vertigo: Reporting feelings of lightheadedness, dizziness, or spinning sensations.',
    'Skin Changes: Noting concerns like rashes, itching, or changes in skin appearance.',
    'Headaches: Mentioning chronic or severe headaches.',
    'Weight Changes: Noting sudden or unexplained weight loss or gain.',
  ];

  static List<String> medicines = [
    'Acetaminophen',
    'Ibuprofen',
    'Lisinopril',
    'Amoxicillin',
    'Atorvastatin',
    'Metformin',
    'Omeprazole',
    'Albuterol',
    'Ciprofloxacin',
    'Diphenhydramine',
  ];


  static  Future<Prescription> generateFakePrescription(int patientId) async  {
    // Generate random values for prescription details
    String diagnosis = 'Diagnosis done.';
    String chiefComplaint = chiefComplaints[Random().nextInt(chiefComplaints.length - 1)];
    DateTime createdDate = DateTime.now();
    DateTime updatedDate = DateTime.now();
    double totalAmount = Random().nextDouble() * 100.0;
    double paidAmount = Random().nextDouble() * totalAmount;

    // Generate a random number of prescription lines
    int numberOfLines = Random().nextInt(5) + 1; // 1 to 5 lines

    // Generate prescription lines
    List<PrescriptionLine> prescriptionLines = List.generate(numberOfLines, (index) {
      return PrescriptionLine(
        sysPrescriptionLineId: index + 1, // Assuming sysPrescriptionLineId is auto-incremented
        medicine: Medicine(
          sysMedicineId: numberOfLines,
          name: medicines[index],
          description: 'Descriptionssss',
          createdDate: DateTime.now(),
          updatedDate: DateTime.now(),
        ),
        doses: '${Random().nextInt(1)}-${Random().nextInt(1)}-${Random().nextInt(1)}',
        duration: '${Random().nextInt(9)} Days',
        notes: 'SoP',
        strength: '${Random().nextInt(100)}Mg',
      );
    });

    // Create and return the fake prescription
    return Prescription(
      sysPrescriptionId: 0, // sysPrescriptionId will be auto-generated by the database
      prescriptionLines: prescriptionLines,
      patientId: patientId,
      diagnosis: diagnosis,
      chiefComplaint: chiefComplaint,
      createdDate: createdDate,
      updatedDate: updatedDate,
      totalAmount: totalAmount,
      paidAmount: paidAmount,
    );
  }
}
